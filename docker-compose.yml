consul:
  image: autopilotpattern/consul:0.7.3r39
  restart: always
  dns:
    - 127.0.0.1
  labels:
    - triton.cns.services=consul
  ports:
    - "8500:8500"
  command: >
    /usr/local/bin/containerpilot
  env_file:
    - _env
  environment:
    - CONSUL_DEV=1
prometheus:
  image: autopilotpattern/prometheus:1.7.1-r20
  restart: always
  ports:
    - "9090:9090"
  env_file:
    - _env
  dns:
    - 127.0.0.1
nats:
  image: autopilotpattern/nats:0.9.6-r1.0.0
  restart: always
  ports:
    - 8222
  links:
    - consul:consul
  env_file:
    - _env
redis:
  image: redis
  expose:
    - 6379
  restart: always
gateway:
  image: d0cker/gateway:4.0.0
  ports:
    - "8001:8001"
  links:
    - redis:redis
  env_file:
    - _env
  restart: always
influxdb:
  image: autopilotpattern/influxdb:1.1.1
  ports:
    - "8086:8086"
    - "8083:8083"
  restart: always
  env_file:
    - _env
  environment:
    - ADMIN_USER=root
    - INFLUXDB_INIT_PWD=root123
    - INFLUXDB_ADMIN_ENABLED=true
    - INFLUXDB_REPORTING_DISABLED=true
    - INFLUXDB_DATA_QUERY_LOG_ENABLED=false
    - INFLUXDB_HTTP_LOG_ENABLED=false
    - INFLUXDB_CONTINUOUS_QUERIES_LOG_ENABLED=false
serializer:
  image: d0cker/serializer:6.5.0
  env_file:
    - _env
  environment:
    - INFLUXDB_USER=root
    - INFLUXDB_PWD=root123
  expose:
    - "80"
    - "9090"
  restart: always
frontend:
  image: d0cker/frontend:6.2.0
  env_file:
    - _env
  expose:
    - "10001"
  ports:
    - "80:10001"
  restart: always
smartthings:
  image: d0cker/smartthings:8.2.0
  labels:
    - triton.cns.services=smartthings
  ports:
    - "80:80"
  env_file:
    - _env
  environment:
    - FAKE_MODE=true
  restart: always
humidity:
  image: d0cker/sensor:4.2.0
  env_file:
    - _env
  environment:
    - SENSOR_TYPE=humidity
  restart: always
motion:
  image: d0cker/sensor:4.2.0
  env_file:
    - _env
  environment:
    - SENSOR_TYPE=motion
  restart: always
temperature:
  image: d0cker/sensor:4.2.0
  env_file:
    - _env
  environment:
    - SENSOR_TYPE=temperature
  restart: always
